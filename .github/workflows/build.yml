name: Build Application

on:
  workflow_dispatch:
    inputs:
      platform:
        description: '选择构建平台'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - windows
          - linux
          - mac

jobs:
  build-windows:
    if: github.event.inputs.platform == 'all' || contains(github.event.inputs.platform, 'windows')
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x64, arm64]
        include:
          - arch: x64
            platform: win-x64
          - arch: arm64
            platform: win-arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build Windows ${{ matrix.arch }}
        run: yarn build:win:${{ matrix.arch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: chatchat-${{ matrix.platform }}
          path: |
            dist/v*/*
            !dist/v*/win-unpacked
            !dist/v*/win-arm64-unpacked

  build-linux:
    if: github.event.inputs.platform == 'all' || contains(github.event.inputs.platform, 'linux')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x64, arm64]
        include:
          - arch: x64
            platform: linux-x64
          - arch: arm64
            platform: linux-arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt autoremove
          sudo apt-get install libarchive-tools rpm

      - name: Build Linux ${{ matrix.arch }}
        run: yarn build:linux:${{ matrix.arch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: chatchat-${{ matrix.platform }}
          path: |
            dist/v*/*
            !dist/v*/linux-unpacked
            !dist/v*/linux-arm64-unpacked

  build-mac:
    if: github.event.inputs.platform == 'all' || contains(github.event.inputs.platform, 'mac')
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x64, arm64]
        include:
          - arch: x64
            platform: mac-x64
          - arch: arm64
            platform: mac-arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build Mac ${{ matrix.arch }}
        run: yarn build:mac:${{ matrix.arch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: chatchat-${{ matrix.platform }}
          path: |
            dist/v*/*
            !dist/v*/mac
            !dist/v*/mac-arm64