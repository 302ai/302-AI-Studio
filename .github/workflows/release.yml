on:
  push:
    tags: ["*.*.*"]
    branches:
      - main

jobs:
  release:
    if: github.ref_type == 'tag' && contains(github.ref_name, '.')
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install corepack
        run: corepack enable && corepack prepare yarn@4.9.2 --activate

      - name: Install Dependencies
        run: yarn install
        env:
          NODE_OPTIONS: --max-old-space-size=8192

      - name: apt-update
        if: startsWith(matrix.os, 'ubuntu-latest')
        run: sudo apt-get update

      - name: autoremove
        if: startsWith(matrix.os, 'ubuntu-latest')
        run: sudo apt autoremove

      - name: Install libarchive rpm on Linux
        if: startsWith(matrix.os, 'ubuntu-latest')
        run: sudo apt-get install libarchive-tools rpm

      # macOS 相关步骤
      - name: Setup macOS Keychain and Import Certificate
        if: matrix.os == 'macos-latest'
        env:
          MAC_CERTS: ${{ secrets.mac_certs }}
          MAC_CERTS_PASSWORD: ${{ secrets.mac_certs_password }}
        run: |
          security create-keychain -p github-actions build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p github-actions build.keychain
          security set-keychain-settings -lut 21600 build.keychain
          echo "$MAC_CERTS" | base64 --decode > certificate.p12
          security import certificate.p12 -k build.keychain -P "$MAC_CERTS_PASSWORD" -T /usr/bin/codesign
          security list-keychains -d user -s build.keychain
          rm -f certificate.p12

      - name: List app contents (for debug)
        if: matrix.os == 'macos-latest'
        run: ls -lR dist || true

      - name: Release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          package_manager: "yarn"
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # Mac certs
          mac_certs: ${{ secrets.mac_certs }}
          mac_certs_password: ${{ secrets.mac_certs_password }}

          # If the commit is tagged with a version (e.g. "25.26.0"),
          # release the app after building
          release: true
          # build_script_name: "prebuild"
          max_attempts: 3
        env:
          NODE_OPTIONS: --max-old-space-size=8192
          # macOS notarization API key
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}