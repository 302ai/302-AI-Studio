import Ai302ProviderIcon from "@renderer/assets/images/providers/302ai.png";
import ZhinaoProviderIcon from "@renderer/assets/images/providers/360.png";
import AiHubMixProviderIcon from "@renderer/assets/images/providers/aihubmix.webp";
import AlayaNewProviderIcon from "@renderer/assets/images/providers/alayanew.webp";
import AnthropicProviderIcon from "@renderer/assets/images/providers/anthropic.png";
import BaichuanProviderIcon from "@renderer/assets/images/providers/baichuan.png";
import BaiduCloudProviderIcon from "@renderer/assets/images/providers/baidu-cloud.svg";
import BailianProviderIcon from "@renderer/assets/images/providers/bailian.png";
import DmxapiProviderIcon from "@renderer/assets/images/providers/DMXAPI.png";
import DeepSeekProviderIcon from "@renderer/assets/images/providers/deepseek.png";
import FireworksProviderIcon from "@renderer/assets/images/providers/fireworks.png";
import GiteeAIProviderIcon from "@renderer/assets/images/providers/gitee-ai.png";
import GithubProviderIcon from "@renderer/assets/images/providers/github.png";
import GoogleProviderIcon from "@renderer/assets/images/providers/google.png";
import GPUStackProviderIcon from "@renderer/assets/images/providers/gpustack.svg";
import GrokProviderIcon from "@renderer/assets/images/providers/grok.png";
import GroqProviderIcon from "@renderer/assets/images/providers/groq.png";
import HunyuanProviderIcon from "@renderer/assets/images/providers/hunyuan.png";
import HyperbolicProviderIcon from "@renderer/assets/images/providers/hyperbolic.png";
import InfiniProviderIcon from "@renderer/assets/images/providers/infini.png";
import JinaProviderIcon from "@renderer/assets/images/providers/jina.png";
import LMStudioProviderIcon from "@renderer/assets/images/providers/lmstudio.png";
import AzureProviderIcon from "@renderer/assets/images/providers/microsoft.png";
import MinimaxProviderIcon from "@renderer/assets/images/providers/minimax.png";
import MistralProviderIcon from "@renderer/assets/images/providers/mistral.png";
import ModelScopeProviderIcon from "@renderer/assets/images/providers/modelscope.png";
import MoonshotProviderIcon from "@renderer/assets/images/providers/moonshot.png";
import NvidiaProviderIcon from "@renderer/assets/images/providers/nvidia.png";
import O3ProviderIcon from "@renderer/assets/images/providers/o3.png";
import OcoolAiProviderIcon from "@renderer/assets/images/providers/ocoolai.png";
import OllamaProviderIcon from "@renderer/assets/images/providers/ollama.png";
import OpenAiProviderIcon from "@renderer/assets/images/providers/openai.png";
import OpenRouterProviderIcon from "@renderer/assets/images/providers/openrouter.png";
import PerplexityProviderIcon from "@renderer/assets/images/providers/perplexity.png";
import PPIOProviderIcon from "@renderer/assets/images/providers/ppio.png";
import QiniuProviderIcon from "@renderer/assets/images/providers/qiniu.webp";
import SiliconFlowProviderIcon from "@renderer/assets/images/providers/silicon.png";
import StepProviderIcon from "@renderer/assets/images/providers/step.png";
import TencentCloudProviderIcon from "@renderer/assets/images/providers/tencent-cloud-ti.png";
import TogetherProviderIcon from "@renderer/assets/images/providers/together.png";
import BytedanceProviderIcon from "@renderer/assets/images/providers/volcengine.png";
import VoyageAIProviderIcon from "@renderer/assets/images/providers/voyageai.png";
import XirangProviderIcon from "@renderer/assets/images/providers/xirang.png";
import ZeroOneProviderIcon from "@renderer/assets/images/providers/zero-one.png";
import ZhipuProviderIcon from "@renderer/assets/images/providers/zhipu.png";
import type { ModelProvider } from "@renderer/types/providers";
import { SYSTEM_MODELS } from "./models";

const PROVIDER_ICON_MAP = {
  "302ai": Ai302ProviderIcon,
  openai: OpenAiProviderIcon,
  silicon: SiliconFlowProviderIcon,
  deepseek: DeepSeekProviderIcon,
  "gitee-ai": GiteeAIProviderIcon,
  yi: ZeroOneProviderIcon,
  groq: GroqProviderIcon,
  zhipu: ZhipuProviderIcon,
  ollama: OllamaProviderIcon,
  lmstudio: LMStudioProviderIcon,
  moonshot: MoonshotProviderIcon,
  openrouter: OpenRouterProviderIcon,
  baichuan: BaichuanProviderIcon,
  dashscope: BailianProviderIcon,
  modelscope: ModelScopeProviderIcon,
  xirang: XirangProviderIcon,
  anthropic: AnthropicProviderIcon,
  aihubmix: AiHubMixProviderIcon,
  gemini: GoogleProviderIcon,
  stepfun: StepProviderIcon,
  doubao: BytedanceProviderIcon,
  minimax: MinimaxProviderIcon,
  github: GithubProviderIcon,
  copilot: GithubProviderIcon,
  ocoolai: OcoolAiProviderIcon,
  together: TogetherProviderIcon,
  fireworks: FireworksProviderIcon,
  zhinao: ZhinaoProviderIcon,
  nvidia: NvidiaProviderIcon,
  "azure-openai": AzureProviderIcon,
  hunyuan: HunyuanProviderIcon,
  grok: GrokProviderIcon,
  hyperbolic: HyperbolicProviderIcon,
  mistral: MistralProviderIcon,
  jina: JinaProviderIcon,
  ppio: PPIOProviderIcon,
  "baidu-cloud": BaiduCloudProviderIcon,
  dmxapi: DmxapiProviderIcon,
  perplexity: PerplexityProviderIcon,
  infini: InfiniProviderIcon,
  o3: O3ProviderIcon,
  "tencent-cloud-ti": TencentCloudProviderIcon,
  gpustack: GPUStackProviderIcon,
  alayanew: AlayaNewProviderIcon,
  voyageai: VoyageAIProviderIcon,
  qiniu: QiniuProviderIcon,
} as const;

export function getProviderIcon(providerId: string) {
  return PROVIDER_ICON_MAP[providerId as keyof typeof PROVIDER_ICON_MAP];
}

export const INITIAL_PROVIDERS: ModelProvider[] = [
  {
    id: "silicon",
    name: "Silicon",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://api.siliconflow.cn",
    models: SYSTEM_MODELS.silicon,
    isSystem: true,
    enabled: true,
  },
  {
    id: "aihubmix",
    name: "AiHubMix",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://aihubmix.com",
    models: SYSTEM_MODELS.aihubmix,
    isSystem: true,
    enabled: false,
  },
  {
    id: "ocoolai",
    name: "ocoolAI",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://api.ocoolai.com",
    models: SYSTEM_MODELS.ocoolai,
    isSystem: true,
    enabled: false,
  },
  {
    id: "deepseek",
    name: "deepseek",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://api.deepseek.com",
    models: SYSTEM_MODELS.deepseek,
    isSystem: true,
    enabled: false,
  },
  {
    id: "openrouter",
    name: "OpenRouter",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://openrouter.ai/api/v1/",
    models: SYSTEM_MODELS.openrouter,
    isSystem: true,
    enabled: false,
  },
  {
    id: "ppio",
    name: "PPIO",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://api.ppinfra.com/v3/openai",
    models: SYSTEM_MODELS.ppio,
    isSystem: true,
    enabled: false,
  },
  {
    id: "alayanew",
    name: "AlayaNew",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://deepseek.alayanew.com",
    models: SYSTEM_MODELS.alayanew,
    isSystem: true,
    enabled: false,
  },
  {
    id: "infini",
    name: "Infini",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://cloud.infini-ai.com/maas",
    models: SYSTEM_MODELS.infini,
    isSystem: true,
    enabled: false,
  },
  {
    id: "qiniu",
    name: "Qiniu",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://api.qnaigc.com",
    models: SYSTEM_MODELS.qiniu,
    isSystem: true,
    enabled: false,
  },
  {
    id: "dmxapi",
    name: "DMXAPI",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://www.dmxapi.cn",
    models: SYSTEM_MODELS.dmxapi,
    isSystem: true,
    enabled: false,
  },
  {
    id: "o3",
    name: "O3",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://api.o3.fan",
    models: SYSTEM_MODELS.o3,
    isSystem: true,
    enabled: false,
  },
  {
    id: "ollama",
    name: "Ollama",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "http://localhost:11434",
    models: SYSTEM_MODELS.ollama,
    isSystem: true,
    enabled: false,
  },
  {
    id: "lmstudio",
    name: "LM Studio",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "http://localhost:1234",
    models: SYSTEM_MODELS.lmstudio,
    isSystem: true,
    enabled: false,
  },
  {
    id: "anthropic",
    name: "Anthropic",
    type: "anthropic",
    apiKey: "",
    apiHost: "https://api.anthropic.com/",
    models: SYSTEM_MODELS.anthropic,
    isSystem: true,
    enabled: false,
  },
  {
    id: "openai",
    name: "OpenAI",
    type: "openai",
    apiKey: "",
    apiHost: "https://api.openai.com",
    models: SYSTEM_MODELS.openai,
    isSystem: true,
    enabled: false,
  },
  {
    id: "azure-openai",
    name: "Azure OpenAI",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "",
    apiVersion: "",
    models: SYSTEM_MODELS["azure-openai"],
    isSystem: true,
    enabled: false,
  },
  {
    id: "gemini",
    name: "Gemini",
    type: "gemini",
    apiKey: "",
    apiHost: "https://generativelanguage.googleapis.com",
    models: SYSTEM_MODELS.gemini,
    isSystem: true,
    enabled: false,
  },
  {
    id: "zhipu",
    name: "ZhiPu",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://open.bigmodel.cn/api/paas/v4/",
    models: SYSTEM_MODELS.zhipu,
    isSystem: true,
    enabled: false,
  },
  {
    id: "github",
    name: "Github Models",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://models.inference.ai.azure.com/",
    models: SYSTEM_MODELS.github,
    isSystem: true,
    enabled: false,
  },
  {
    id: "copilot",
    name: "Github Copilot",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://api.githubcopilot.com/",
    models: SYSTEM_MODELS.copilot,
    isSystem: true,
    enabled: false,
  },
  {
    id: "yi",
    name: "Yi",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://api.lingyiwanwu.com",
    models: SYSTEM_MODELS.yi,
    isSystem: true,
    enabled: false,
  },
  {
    id: "moonshot",
    name: "Moonshot AI",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://api.moonshot.cn",
    models: SYSTEM_MODELS.moonshot,
    isSystem: true,
    enabled: false,
  },
  {
    id: "baichuan",
    name: "BAICHUAN AI",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://api.baichuan-ai.com",
    models: SYSTEM_MODELS.baichuan,
    isSystem: true,
    enabled: false,
  },
  {
    id: "dashscope",
    name: "Bailian",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://dashscope.aliyuncs.com/compatible-mode/v1/",
    models: SYSTEM_MODELS.bailian,
    isSystem: true,
    enabled: false,
  },
  {
    id: "stepfun",
    name: "StepFun",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://api.stepfun.com",
    models: SYSTEM_MODELS.stepfun,
    isSystem: true,
    enabled: false,
  },
  {
    id: "doubao",
    name: "doubao",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://ark.cn-beijing.volces.com/api/v3/",
    models: SYSTEM_MODELS.doubao,
    isSystem: true,
    enabled: false,
  },
  {
    id: "minimax",
    name: "MiniMax",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://api.minimax.chat/v1/",
    models: SYSTEM_MODELS.minimax,
    isSystem: true,
    enabled: false,
  },
  {
    id: "groq",
    name: "Groq",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://api.groq.com/openai",
    models: SYSTEM_MODELS.groq,
    isSystem: true,
    enabled: false,
  },
  {
    id: "together",
    name: "Together",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://api.together.xyz",
    models: SYSTEM_MODELS.together,
    isSystem: true,
    enabled: false,
  },
  {
    id: "fireworks",
    name: "Fireworks",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://api.fireworks.ai/inference",
    models: SYSTEM_MODELS.fireworks,
    isSystem: true,
    enabled: false,
  },
  {
    id: "zhinao",
    name: "zhinao",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://api.360.cn",
    models: SYSTEM_MODELS.zhinao,
    isSystem: true,
    enabled: false,
  },
  {
    id: "hunyuan",
    name: "hunyuan",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://api.hunyuan.cloud.tencent.com",
    models: SYSTEM_MODELS.hunyuan,
    isSystem: true,
    enabled: false,
  },
  {
    id: "nvidia",
    name: "nvidia",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://integrate.api.nvidia.com",
    models: SYSTEM_MODELS.nvidia,
    isSystem: true,
    enabled: false,
  },
  {
    id: "grok",
    name: "Grok",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://api.x.ai",
    models: SYSTEM_MODELS.grok,
    isSystem: true,
    enabled: false,
  },
  {
    id: "hyperbolic",
    name: "Hyperbolic",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://api.hyperbolic.xyz",
    models: SYSTEM_MODELS.hyperbolic,
    isSystem: true,
    enabled: false,
  },
  {
    id: "mistral",
    name: "Mistral",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://api.mistral.ai",
    models: SYSTEM_MODELS.mistral,
    isSystem: true,
    enabled: false,
  },
  {
    id: "jina",
    name: "Jina",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://api.jina.ai",
    models: SYSTEM_MODELS.jina,
    isSystem: true,
    enabled: false,
  },
  {
    id: "gitee-ai",
    name: "gitee ai",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://ai.gitee.com",
    models: SYSTEM_MODELS["gitee-ai"],
    isSystem: true,
    enabled: false,
  },
  {
    id: "perplexity",
    name: "Perplexity",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://api.perplexity.ai/",
    models: SYSTEM_MODELS.perplexity,
    isSystem: true,
    enabled: false,
  },
  {
    id: "modelscope",
    name: "ModelScope",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://api-inference.modelscope.cn/v1/",
    models: SYSTEM_MODELS.modelscope,
    isSystem: true,
    enabled: false,
  },
  {
    id: "xirang",
    name: "Xirang",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://wishub-x1.ctyun.cn",
    models: SYSTEM_MODELS.xirang,
    isSystem: true,
    enabled: false,
  },
  {
    id: "tencent-cloud-ti",
    name: "Tencent Cloud TI",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://api.lkeap.cloud.tencent.com",
    models: SYSTEM_MODELS["tencent-cloud-ti"],
    isSystem: true,
    enabled: false,
  },
  {
    id: "baidu-cloud",
    name: "Baidu Cloud",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://qianfan.baidubce.com/v2/",
    models: SYSTEM_MODELS["baidu-cloud"],
    isSystem: true,
    enabled: false,
  },
  {
    id: "gpustack",
    name: "GPUStack",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "",
    models: SYSTEM_MODELS.gpustack,
    isSystem: true,
    enabled: false,
  },
  {
    id: "voyageai",
    name: "VoyageAI",
    type: "openai-compatible",
    apiKey: "",
    apiHost: "https://api.voyageai.com",
    models: SYSTEM_MODELS.voyageai,
    isSystem: true,
    enabled: false,
  },
];

export const PROVIDER_TYPES = [
  { label: "OpenAI-Compatible", value: "openai-compatible" },
  { label: "OpenAI-Response", value: "openai" },
  { label: "Gemini", value: "gemini" },
  { label: "Anthropic", value: "anthropic" },
  { label: "Azure OpenAI", value: "azure-openai" },
];
